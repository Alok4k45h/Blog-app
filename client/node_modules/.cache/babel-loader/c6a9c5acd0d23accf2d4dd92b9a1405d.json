{"ast":null,"code":"var _jsxFileName = \"/home/knight/Downloads/blog-website/client/src/components/singlePost/SinglePost.jsx\",\n    _s = $RefreshSig$();\n\nimport { Link, useLocation } from \"react-router-dom\";\nimport { useState, useEffect, useContext } from \"react\";\nimport \"./singlePost.css\";\nimport axios from \"axios\";\nimport { Context } from \"../context/Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SinglePost() {\n  _s();\n\n  const location = useLocation(); // location.pathname.split(\"/\")[2] gives exact id of that post by splitting through \"/\"\n\n  console.log(location.pathname.split(\"/\")[2]);\n  const path = location.pathname.split(\"/\")[2];\n  const [post, setpost] = useState({});\n  const {\n    user\n  } = useContext(Context);\n  const PF = \"http://localhost:5000/images/\"; // useEffect is triggered whenever path i.e post object id is changed && through this we are fetching that specfic post data and setting it to post state variable\n\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axios.get(\"/posts/\" + path);\n      setpost(res.data);\n    };\n\n    getPost();\n  }, [path]);\n\n  const handleDelete = async () => {\n    try {\n      await axios.delete(\"/posts/\" + path, {\n        data: {\n          username: user.username\n        }\n      });\n      window.location.replace(\"/\");\n    } catch (error) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"singlePost\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singlePostWrapper\",\n      children: [post.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"singlePostImg\",\n        src: PF + post.photo,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"singlePostTitle\",\n        children: [post.title, post.username === (user === null || user === void 0 ? void 0 : user.username) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"singlePostEdit\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon far fa-edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon far fa-trash-alt\",\n            onClick: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePostInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Author:\", /*#__PURE__*/_jsxDEV(\"b\", {\n            className: \"singlePostAuthor\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              className: \"link\",\n              to: `/?user=${post.username}`,\n              children: post.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: new Date(post.createdAt).toDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"singlePostDesc\",\n        children: post.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SinglePost, \"FqOBiBYR4B5RCTO2pCyKP3RPzI4=\", false, function () {\n  return [useLocation];\n});\n\n_c = SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"sources":["/home/knight/Downloads/blog-website/client/src/components/singlePost/SinglePost.jsx"],"names":["Link","useLocation","useState","useEffect","useContext","axios","Context","SinglePost","location","console","log","pathname","split","path","post","setpost","user","PF","getPost","res","get","data","handleDelete","delete","username","window","replace","error","photo","title","Date","createdAt","toDateString","desc"],"mappings":"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","sourcesContent":["import { Link, useLocation } from \"react-router-dom\";\nimport { useState, useEffect, useContext } from \"react\";\nimport \"./singlePost.css\";\nimport axios from \"axios\";\nimport { Context } from \"../context/Context\";\n\nexport default function SinglePost() {\n  const location = useLocation();\n  // location.pathname.split(\"/\")[2] gives exact id of that post by splitting through \"/\"\n  console.log(location.pathname.split(\"/\")[2]);\n  const path = location.pathname.split(\"/\")[2];\n  const [post, setpost] = useState({});\n  const { user } = useContext(Context);\n  const PF = \"http://localhost:5000/images/\";\n\n  // useEffect is triggered whenever path i.e post object id is changed && through this we are fetching that specfic post data and setting it to post state variable\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axios.get(\"/posts/\" + path);\n      setpost(res.data);\n    };\n    getPost();\n  }, [path]);\n\n  const handleDelete = async () => {\n    try {\n      await axios.delete(\"/posts/\" + path, {\n        data: { username: user.username },\n      });\n      window.location.replace(\"/\");\n    } catch (error) {}\n  };\n\n  return (\n    <div className=\"singlePost\">\n      <div className=\"singlePostWrapper\">\n        {/*if Post.photo contain data then only img tag will be triggered*/}\n        {post.photo && (\n          <img className=\"singlePostImg\" src={PF + post.photo} alt=\"\" />\n        )}\n        {/*setting all things based on post state object key value*/}\n        <h1 className=\"singlePostTitle\">\n          {post.title}\n          {post.username === user?.username && (\n            <div className=\"singlePostEdit\">\n              <i className=\"singlePostIcon far fa-edit\"></i>\n              <i\n                className=\"singlePostIcon far fa-trash-alt\"\n                onClick={handleDelete}\n              ></i>\n            </div>\n          )}\n        </h1>\n        <div className=\"singlePostInfo\">\n          <span>\n            Author:\n            <b className=\"singlePostAuthor\">\n              <Link className=\"link\" to={`/?user=${post.username}`}>\n                {post.username}\n              </Link>\n            </b>\n          </span>\n          <span>{new Date(post.createdAt).toDateString()}</span>\n        </div>\n        <p className=\"singlePostDesc\">{post.desc}</p>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}