{"ast":null,"code":"var _jsxFileName = \"/home/knight/WebDev/blog-website/client/src/components/singlePost/SinglePost.jsx\",\n    _s = $RefreshSig$();\n\nimport { Link, useLocation } from \"react-router-dom\";\nimport { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { Context } from \"../context/Context\";\nimport \"./singlePost.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SinglePost() {\n  _s();\n\n  const location = useLocation(); // location.pathname.split(\"/\")[2] gives exact id of that post by splitting through \"/\"\n\n  console.log(location.pathname.split(\"/\")[2]);\n  const path = location.pathname.split(\"/\")[2];\n  const [post, setpost] = useState({});\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [updateMode, setUpdateMode] = useState(false);\n  const {\n    user\n  } = useContext(Context);\n  const PF = \"http://localhost:5000/images/\"; // useEffect is triggered whenever path i.e post object id is changed && through this we are fetching that specfic post data and setting it to post state variable\n\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axios.get(\"/posts/\" + path);\n      setpost(res.data);\n      setTitle(res.data.title);\n      setDesc(res.data.desc);\n    };\n\n    getPost();\n  }, [path]);\n\n  const handleDelete = async () => {\n    try {\n      await axios.delete(\"/posts/\" + path, {\n        data: {\n          username: user.username\n        }\n      });\n      window.location.replace(\"/\");\n    } catch (error) {}\n  };\n\n  const handleUpdate = async () => {\n    try {\n      await axios.put(`/posts/${post._id}`, {\n        username: user.username,\n        title,\n        desc\n      }); //window.location.reload();\n\n      setUpdateMode(false);\n    } catch (error) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"singlePost\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singlePostWrapper\",\n      children: [post.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"singlePostImg\",\n        src: PF + post.photo,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        className: \"singlePostTitleInput\",\n        autoFocus: true,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"singlePostTitle\",\n        children: [title, post.username === (user === null || user === void 0 ? void 0 : user.username) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"singlePostEdit\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon far fa-edit\",\n            onClick: () => setUpdateMode(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon far fa-trash-alt\",\n            onClick: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePostInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Author:\", /*#__PURE__*/_jsxDEV(\"b\", {\n            className: \"singlePostAuthor\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              className: \"link\",\n              to: `/?user=${post.username}`,\n              children: post.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: new Date(post.createdAt).toDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"\",\n        id: \"\",\n        value: desc,\n        className: \"singlePostDescInput\",\n        onChange: e => setDesc(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"singlePostDesc\",\n        children: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), updateMode && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"singlePostButton\",\n        onClick: handleUpdate,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SinglePost, \"B9JS3ah/OrqVNa4v+5LaHbtGqZA=\", false, function () {\n  return [useLocation];\n});\n\n_c = SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"sources":["/home/knight/WebDev/blog-website/client/src/components/singlePost/SinglePost.jsx"],"names":["Link","useLocation","useState","useEffect","useContext","axios","Context","SinglePost","location","console","log","pathname","split","path","post","setpost","title","setTitle","desc","setDesc","updateMode","setUpdateMode","user","PF","getPost","res","get","data","handleDelete","delete","username","window","replace","error","handleUpdate","put","_id","photo","e","target","value","Date","createdAt","toDateString"],"mappings":"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","sourcesContent":["import { Link, useLocation } from \"react-router-dom\";\nimport { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { Context } from \"../context/Context\";\nimport \"./singlePost.css\";\n\nexport default function SinglePost() {\n  const location = useLocation();\n  // location.pathname.split(\"/\")[2] gives exact id of that post by splitting through \"/\"\n  console.log(location.pathname.split(\"/\")[2]);\n  const path = location.pathname.split(\"/\")[2];\n\n  const [post, setpost] = useState({});\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [updateMode, setUpdateMode] = useState(false);\n  const { user } = useContext(Context);\n\n  const PF = \"http://localhost:5000/images/\";\n\n  // useEffect is triggered whenever path i.e post object id is changed && through this we are fetching that specfic post data and setting it to post state variable\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axios.get(\"/posts/\" + path);\n      setpost(res.data);\n      setTitle(res.data.title);\n      setDesc(res.data.desc);\n    };\n    getPost();\n  }, [path]);\n\n  const handleDelete = async () => {\n    try {\n      await axios.delete(\"/posts/\" + path, {\n        data: { username: user.username },\n      });\n      window.location.replace(\"/\");\n    } catch (error) {}\n  };\n\n  const handleUpdate = async () => {\n    try {\n      await axios.put(`/posts/${post._id}`, {\n        username: user.username,\n        title,\n        desc,\n      });\n      //window.location.reload();\n      setUpdateMode(false);\n    } catch (error) {}\n  };\n\n  return (\n    <div className=\"singlePost\">\n      <div className=\"singlePostWrapper\">\n        {/*if Post.photo contain data then only img tag will be triggered*/}\n        {post.photo && (\n          <img className=\"singlePostImg\" src={PF + post.photo} alt=\"\" />\n        )}\n\n        {updateMode ? (\n          <input\n            type=\"text\"\n            value={title}\n            className=\"singlePostTitleInput\"\n            autoFocus\n            onChange={(e) => setTitle(e.target.value)}\n          />\n        ) : (\n          <h1 className=\"singlePostTitle\">\n            {title}\n            {post.username === user?.username && (\n              <div className=\"singlePostEdit\">\n                <i\n                  className=\"singlePostIcon far fa-edit\"\n                  onClick={() => setUpdateMode(true)}\n                ></i>\n                <i\n                  className=\"singlePostIcon far fa-trash-alt\"\n                  onClick={handleDelete}\n                ></i>\n              </div>\n            )}\n          </h1>\n        )}\n\n        <div className=\"singlePostInfo\">\n          <span>\n            Author:\n            <b className=\"singlePostAuthor\">\n              <Link className=\"link\" to={`/?user=${post.username}`}>\n                {post.username}\n              </Link>\n            </b>\n          </span>\n\n          <span>{new Date(post.createdAt).toDateString()}</span>\n        </div>\n\n        {updateMode ? (\n          <textarea\n            name=\"\"\n            id=\"\"\n            value={desc}\n            className=\"singlePostDescInput\"\n            onChange={(e) => setDesc(e.target.value)}\n          />\n        ) : (\n          <p className=\"singlePostDesc\">{desc}</p>\n        )}\n\n        {updateMode && (\n          <button className=\"singlePostButton\" onClick={handleUpdate}>\n            Update\n          </button>\n        )}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}