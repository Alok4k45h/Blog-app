{"ast":null,"code":"var _jsxFileName = \"/home/knight/WebDev/blog-website/client/src/components/context/Context.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer } from \"react\";\nimport { useEffect } from \"react\";\nimport Reducer from \"./Reducer\"; // initial state before clicking the login button\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INITIAL_STATE = {\n  // getting user value from local storage if it contain otherwise storing null value (parsing from JSON to Normal Js object)\n  user: JSON.parse(localStorage.getItem(\"user\")) || null,\n  isFetching: false,\n  error: false\n}; // Creating && Exporting Context Which is available for use\n\nexport const Context = /*#__PURE__*/createContext(INITIAL_STATE); // making State variable accessable to every page and component using ContextProvider\n\n_c = Context;\nexport const ContextProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(Reducer, INITIAL_STATE);\n  useEffect(() => {\n    localStorage.setItem(\"user\", JSON.stringify(state.user));\n  }, [state.user]);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      user: state.user,\n      isFetching: state.isFetching,\n      error: state.error,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"zpn/kx5Q6O+5t2dWmjRtda+kHzA=\");\n\n_c2 = ContextProvider;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Context\");\n$RefreshReg$(_c2, \"ContextProvider\");","map":{"version":3,"sources":["/home/knight/WebDev/blog-website/client/src/components/context/Context.js"],"names":["createContext","useReducer","useEffect","Reducer","INITIAL_STATE","user","JSON","parse","localStorage","getItem","isFetching","error","Context","ContextProvider","children","state","dispatch","setItem","stringify"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CAEA;;;AACA,MAAMC,aAAa,GAAG;AACpB;AACAC,EAAAA,IAAI,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,KAA4C,IAF9B;AAGpBC,EAAAA,UAAU,EAAE,KAHQ;AAIpBC,EAAAA,KAAK,EAAE;AAJa,CAAtB,C,CAOA;;AACA,OAAO,MAAMC,OAAO,gBAAGZ,aAAa,CAACI,aAAD,CAA7B,C,CAEP;;KAFaQ,O;AAGb,OAAO,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC/C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,UAAU,CAACE,OAAD,EAAUC,aAAV,CAApC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,YAAY,CAACS,OAAb,CAAqB,MAArB,EAA6BX,IAAI,CAACY,SAAL,CAAeH,KAAK,CAACV,IAArB,CAA7B;AACD,GAFQ,EAEN,CAACU,KAAK,CAACV,IAAP,CAFM,CAAT;AAIA,sBACE,QAAC,OAAD,CAAS,QAAT;AACE,IAAA,KAAK,EAAE;AACLA,MAAAA,IAAI,EAAEU,KAAK,CAACV,IADP;AAELK,MAAAA,UAAU,EAAEK,KAAK,CAACL,UAFb;AAGLC,MAAAA,KAAK,EAAEI,KAAK,CAACJ,KAHR;AAILK,MAAAA;AAJK,KADT;AAAA,cAQGF;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAnBM;;GAAMD,e;;MAAAA,e","sourcesContent":["import { createContext, useReducer } from \"react\";\nimport { useEffect } from \"react\";\nimport Reducer from \"./Reducer\";\n\n// initial state before clicking the login button\nconst INITIAL_STATE = {\n  // getting user value from local storage if it contain otherwise storing null value (parsing from JSON to Normal Js object)\n  user: JSON.parse(localStorage.getItem(\"user\")) || null,\n  isFetching: false,\n  error: false,\n};\n\n// Creating && Exporting Context Which is available for use\nexport const Context = createContext(INITIAL_STATE);\n\n// making State variable accessable to every page and component using ContextProvider\nexport const ContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(Reducer, INITIAL_STATE);\n\n  useEffect(() => {\n    localStorage.setItem(\"user\", JSON.stringify(state.user));\n  }, [state.user]);\n\n  return (\n    <Context.Provider\n      value={{\n        user: state.user,\n        isFetching: state.isFetching,\n        error: state.error,\n        dispatch,\n      }}\n    >\n      {children}\n    </Context.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}