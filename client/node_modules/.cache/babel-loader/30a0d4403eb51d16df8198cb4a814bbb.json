{"ast":null,"code":"var _jsxFileName = \"/home/knight/WebDev/blog-website/client/src/pages/settings/Settings.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport Sidebar from \"../../components/sidebar/Sidebar\";\nimport { Context } from \"../../components/context/Context\";\nimport axios from \"axios\";\nimport \"./settings.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Settings() {\n  _s();\n\n  // Defining required State Variable && respective setter function using useState\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const {\n    user,\n    dispatch\n  } = useContext(Context);\n  const PF = \"http://localhost:5000/images/\"; //// Event Listener to be triggered on submitting the form\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    dispatch({\n      type: \"UPDATE_START\"\n    });\n    const updatedUser = {\n      userId: user._id,\n      username,\n      email,\n      password\n    };\n\n    if (file) {\n      const data = new FormData();\n      const filename = Date.now() + file.name;\n      data.append(\"name\", filename);\n      data.append(\"file\", file);\n      updatedUser.profilePic = filename;\n\n      try {\n        await axios.post(\"/upload\", data);\n      } catch (error) {}\n    }\n\n    try {\n      const res = await axios.put(\"/user/\" + user._id, updatedUser);\n      setSuccess(true);\n      dispatch({\n        type: \"UPDATE_SUCCESS\",\n        payload: res.data\n      });\n    } catch (error) {\n      dispatch({\n        type: \"UPDATE_FAILURE\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settings\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settingsWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settingsTitle\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"settingsTitleUpdate\",\n          children: \"Update Your Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"settingsTitleDelete\",\n          children: \"Delete Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"settingsForm\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Profile Picture\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"settingsPP\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: file ? URL.createObjectURL(file) : PF + user.profilePic,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"fileInput\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"settingsPPIcon far fa-user-circle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"fileInput\",\n            type: \"file\",\n            style: {\n              display: \"none\"\n            },\n            className: \"settingsPPInput\",\n            onChange: e => setFile(e.target.files[0])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: user.username,\n          name: \"name\",\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: user.email,\n          name: \"email\",\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          name: \"password\",\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"settingsSubmitButton\",\n          type: \"submit\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), success && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: \"green\",\n            textAlign: \"center\",\n            marginTop: \"20px\"\n          },\n          children: \"Profile has been Updated!!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Settings, \"3dryNmJ46tdr+qWBDqwPnogDvXM=\");\n\n_c = Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["/home/knight/WebDev/blog-website/client/src/pages/settings/Settings.jsx"],"names":["useContext","useState","Sidebar","Context","axios","Settings","username","setUsername","email","setEmail","password","setPassword","file","setFile","success","setSuccess","user","dispatch","PF","handleSubmit","e","preventDefault","type","updatedUser","userId","_id","data","FormData","filename","Date","now","name","append","profilePic","post","error","res","put","payload","URL","createObjectURL","display","target","files","value","color","textAlign","marginTop"],"mappings":"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","sourcesContent":["import { useContext, useState } from \"react\";\nimport Sidebar from \"../../components/sidebar/Sidebar\";\nimport { Context } from \"../../components/context/Context\";\nimport axios from \"axios\";\nimport \"./settings.css\";\n\nexport default function Settings() {\n  // Defining required State Variable && respective setter function using useState\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [success, setSuccess] = useState(false);\n\n  const { user, dispatch } = useContext(Context);\n  const PF = \"http://localhost:5000/images/\";\n\n  //// Event Listener to be triggered on submitting the form\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    dispatch({ type: \"UPDATE_START\" });\n\n    const updatedUser = {\n      userId: user._id,\n      username,\n      email,\n      password,\n    };\n\n    if (file) {\n      const data = new FormData();\n      const filename = Date.now() + file.name;\n      data.append(\"name\", filename);\n      data.append(\"file\", file);\n      updatedUser.profilePic = filename;\n      try {\n        await axios.post(\"/upload\", data);\n      } catch (error) {}\n    }\n\n    try {\n      const res = await axios.put(\"/user/\" + user._id, updatedUser);\n      setSuccess(true);\n      dispatch({ type: \"UPDATE_SUCCESS\", payload: res.data });\n    } catch (error) {\n      dispatch({ type: \"UPDATE_FAILURE\" });\n    }\n  };\n\n  return (\n    <div className=\"settings\">\n      <div className=\"settingsWrapper\">\n        <div className=\"settingsTitle\">\n          <span className=\"settingsTitleUpdate\">Update Your Account</span>\n          <span className=\"settingsTitleDelete\">Delete Account</span>\n        </div>\n\n        <form className=\"settingsForm\" onSubmit={handleSubmit}>\n          <label>Profile Picture</label>\n          <div className=\"settingsPP\">\n            <img\n              src={file ? URL.createObjectURL(file) : PF + user.profilePic}\n              alt=\"\"\n            />\n            <label htmlFor=\"fileInput\">\n              <i className=\"settingsPPIcon far fa-user-circle\"></i>{\" \"}\n            </label>\n            <input\n              id=\"fileInput\"\n              type=\"file\"\n              style={{ display: \"none\" }}\n              className=\"settingsPPInput\"\n              onChange={(e) => setFile(e.target.files[0])}\n            />\n          </div>\n\n          <label>Username</label>\n          <input\n            type=\"text\"\n            placeholder={user.username}\n            name=\"name\"\n            onChange={(e) => setUsername(e.target.value)}\n          />\n\n          <label>Email</label>\n          <input\n            type=\"email\"\n            placeholder={user.email}\n            name=\"email\"\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <label>Password</label>\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            name=\"password\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n\n          <button className=\"settingsSubmitButton\" type=\"submit\">\n            Update\n          </button>\n\n          {success && (\n            <span\n              style={{ color: \"green\", textAlign: \"center\", marginTop: \"20px\" }}\n            >\n              Profile has been Updated!!\n            </span>\n          )}\n        </form>\n      </div>\n      <Sidebar />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}